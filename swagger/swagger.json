{
  "openapi": "3.0.0",
  "info": {
    "title": "API v2 - User Management",
    "description": "API for managing API users via Apiv2 controller",
    "version": "1.0.0"
  },
  "paths": {
    "/apiv2/create_user": {
      "post": {
        "summary": "Create a new API user",
        "tags": ["API Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password", "usertype", "createby"],
                "properties": {
                  "username": { "type": "string", "example": "apiuser1" },
                  "password": { "type": "string", "example": "securepass123" },
                  "usertype": { "type": "string", "example": "admin" },
                  "createby": { "type": "integer", "example": 1 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API user created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "message": { "type": "string", "example": "API user created successfully" }
                  }
                }
              }
            }
          },
          "400": { "description": "Validation error" },
          "500": { "description": "Failed to insert API user" }
        }
      }
    },
    "/apiv2/verify_user_credentials": {
      "post": {
        "summary": "Verify API user's credentials",
        "tags": ["API Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": { "type": "string", "example": "apiuser1" },
                  "password": { "type": "string", "example": "securepass123" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credentials are valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "username": { "type": "string", "example": "apiuser1" },
                        "usertype": { "type": "string", "example": "admin" },
                        "createby": { "type": "integer", "example": 1 },
                        "created_at": { "type": "string", "example": "2025-04-10 10:00:00" },
                        "updated_at": { "type": "string", "example": "2025-04-10 10:00:00" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid username or password" }
        }
      }
    },
    "/apiv2/login": {
      "post": {
        "summary": "Login and generate JWT tokens",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                  "username": { "type": "string", "example": "apiuser1" },
                  "password": { "type": "string", "example": "securepass123" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "access_token": { "type": "string" },
                    "refresh_token": { "type": "string" },
                    "expires_in": { "type": "integer", "example": 3600 }
                  }
                }
              }
            }
          },
          "400": { "description": "Username and password required" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/apiv2/refresh_token": {
      "post": {
        "summary": "Refresh access token using refresh token",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refresh_token"],
                "properties": {
                  "refresh_token": { "type": "string", "example": "your_refresh_token_here" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token issued",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "access_token": { "type": "string" },
                    "expires_in": { "type": "integer", "example": 3600 }
                  }
                }
              }
            }
          },
          "400": { "description": "Refresh token required" },
          "401": { "description": "Invalid or expired refresh token" }
        }
      }
    },
    "/apiv2/protected_data": {
      "get": {
        "summary": "Get protected data",
        "tags": ["Protected"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "message": { "type": "string", "example": "Token is valid" },
                    "user": { "type": "object" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/apiv2/product_list": {
      "get": {
        "summary": "Get paginated list of products with stock info and QR codes",
        "tags": ["Products"],
        "description": "Returns a list of products with stock quantity, barcode, and QR code info. Requires a valid Bearer access token.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Pagination start index",
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with product list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": { "type": "string", "example": "ok" },
                        "product_list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "product_id": { "type": "string" },
                              "stock_qty": { "type": "number" },
                              "qr_code": { "type": "string", "example": "http://yourdomain.com/my-assets/image/qr/1234.png" },
                              "bar_code": { "type": "string", "example": "http://yourdomain.com/Cbarcode/barcode_generator/1234" },
                              "product_info_bybarcode": { "type": "object" }
                            }
                          }
                        },
                        "total_val": { "type": "integer", "example": 250 }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized - Token missing or invalid" }
        }
      }
    },
    "/apiv2/category_list": {
      "get": {
        "summary": "Get all product categories",
        "tags": ["Categories"],
        "description": "Returns all product categories. Requires a valid Bearer access token.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": { "type": "string", "example": "ok" },
                        "categories": {
                          "type": "array",
                          "items": { "type": "object" }
                        },
                        "total_val": { "type": "integer", "example": 15 }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token missing or invalid"
          },
          "200-2": {
            "description": "No records found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": { "type": "string", "example": "error" },
                        "message": { "type": "string", "example": "No Record found" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apiv2/insert_customer": {
    "post": {
      "summary": "Insert a new customer",
      "tags": ["Customer"],
      "security": [{ "bearerAuth": [] }],
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "required": [
                "customer_name",
                "mobile",
                "customer_email",
                "password"
              ],
              "properties": {
                "customer_name": { "type": "string", "example": "John Doe" },
                "address": { "type": "string", "example": "123 Street" },
                "address2": { "type": "string", "example": "Suite 500" },
                "mobile": { "type": "string", "example": "01710000000" },
                "customer_email": { "type": "string", "example": "john@example.com" },
                "email_address": { "type": "string", "example": "billing@example.com" },
                "contact": { "type": "string", "example": "Jane Smith" },
                "phone": { "type": "string", "example": "09666000000" },
                "fax": { "type": "string", "example": "0881234567" },
                "city": { "type": "string", "example": "Dhaka" },
                "state": { "type": "string", "example": "Gulshan" },
                "zip": { "type": "string", "example": "1212" },
                "country": { "type": "string", "example": "Bangladesh" },
                "sales_permit": { "type": "string", "format": "binary" },
                "sales_permit_number": { "type": "string", "example": "PERMIT-12345" },
                "previous_balance": { "type": "number", "example": 1500.50 },
                "password": { "type": "string", "format": "password", "example": "secure123" }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Customer successfully added",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": {
                    "type": "object",
                    "properties": {
                      "status": { "type": "string", "example": "ok" },
                      "message": { "type": "string", "example": "Successfully Added" },
                      "permission": { "type": "string", "example": "write" }
                    }
                  }
                }
              }
            }
          }
        },
        "400": { "description": "Validation or file upload failed" },
        "401": { "description": "Unauthorized - Missing or invalid token" }
      }
    }
  }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
